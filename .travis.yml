language: python
cache: pip
services:
  docker

python:
  - 3.5
  - 3.8
  - pypy3.5

install:
  # pinning coverage package until bugs with coveralls plugin is fixed
  # https://github.com/z4r/python-coveralls/issues/73
  - pip install tox tox-factor wheel python-coveralls "coverage<5.0"

script:
  - echo $TRAVIS_PYTHON_VERSION
  # If we are building from a cron trigger, lets test against the latest
  # Jenkins version. This will ensure the API continues to work with new
  # Jenkins releases while ensuring we always build against a static version
  # from tags and traditional CI builds, which ensures consistent behavior.
  - echo Build trigger type is $TRAVIS_EVENT_TYPE
  - '[ "$TRAVIS_EVENT_TYPE" == "cron" ] && export JK_VER="-- --jenkins-version=jenkins/jenkins:latest" || :'
  - echo Building with jenkins version "$JK_VER"

  # Construct a correct tox python version
  # For PyPy the TravisCI env var mapping should be: pypy3.5 -> pypy3
  # For CPython the TravisCI env var mapping should be: 3.8 -> py38
  - '[ "$TRAVIS_PYTHON_VERSION" = "pypy3.5" ] && export PYVER=`echo $TRAVIS_PYTHON_VERSION | tr "." "\n" | head -n 1` || export PYVER=py`echo $TRAVIS_PYTHON_VERSION | sed "s/\.//" | sed "s/^py//"`'
  - echo $PYVER
  - tox -e $PYVER-lint
  - tox -e $PYVER-test $JK_VER
  - tox -e $PYVER-docs
  # Only publish coverage metrics for the latest supported Python version
  - '[ "$TRAVIS_PYTHON_VERSION" = "3.8" ] && coveralls || echo Skipping Coveralls'


# Deploy to test.pypi.org for branches
# Deploy to pypi.org for tags
# NOTE: You can not replace builds published to pypi, even if you delete one
#       so you must make sure your versions are always unique
jobs:
  include:
    - stage: deploy-release
      python: 3.8
      script:
        - pip install twine
        - python setup.py bdist_wheel
        - twine upload dist/*.whl -u $DEPLOY_USER -p $DEPLOY_PASS
      if: tag IS true AND fork IS NOT true
    - stage: deploy-snapshot
      python: 3.8
      script:
        - pip install twine
        - python setup.py bdist_wheel
        - twine upload --repository-url https://test.pypi.org/legacy/
            dist/*.whl -u $DEPLOY_USER -p $DEPLOY_PASS
      if: tag IS NOT true AND fork IS NOT true

after_success:
  - coveralls
